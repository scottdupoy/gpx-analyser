CPP_FILES = $(wildcard $(SRC_DIR)/*.cpp)
OBJ_FILES = $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.o,$(CPP_FILES))
DEPEND_FILES = $(patsubst $(SRC_DIR)/%.cpp,$(OBJ_DIR)/%.d,$(CPP_FILES))

DEPENDENCY_DLLS = $(foreach dependency,$(DEPENDENCIES),../$(dependency)/$(BIN_DIR)/$(dependency).dll)
BUILD_DEPENDENCY_DLLS = $(foreach dependency,$(DEPENDENCIES),$(BIN_DIR)/$(dependency).dll)
COPY_DEPENDENCY_DLLS = $(foreach dependency,$(DEPENDENCIES),$(dependency)_copy_local)
DEPENDENCY_INCLUDES = $(foreach dependency,$(DEPENDENCIES),-I../$(dependency)/$(INCLUDE_DIR))
DEPENDENCY_LIBS = $(foreach dependency,$(DEPENDENCIES),-L../$(dependency)/$(BIN_DIR) -l$(dependency))

all : build

rebuild : clean build
	
build : $(OBJ_DIR) $(BIN_DIR) $(BUILD_DEPENDENCY_DLLS) $(COPY_DEPENDENCY_DLLS) $(BIN_DIR)/$(TARGET)

$(BIN_DIR)/$(TARGET) : $(OBJ_FILES)
	$(CXX) $(LFLAGS) $(DEPENDENCY_LIBS) $(OBJ_FILES) -o $@

$(OBJ_DIR)/%.o : $(SRC_DIR)/%.cpp
	$(CXX) $(INCLUDES) $(DEPENDENCY_INCLUDES) $(CPPFLAGS) -c -o $@ $<

$(OBJ_DIR) :
	@mkdir $(OBJ_DIR)

$(BIN_DIR) :
	@mkdir $(BIN_DIR)

$(BUILD_DEPENDENCY_DLLS) :
	$(eval DEPENDENCY := $(patsubst $(BIN_DIR)/%.dll,%,$@))
	@echo Build dependency: $(DEPENDENCY)
	@make -C ../$(DEPENDENCY) build

%_copy_local :
	$(eval DEPENDENCY := $(patsubst %_copy_local,%,$@))
	@echo Copying updated files from dependency $(DEPENDENCY) bin to target $(TARGET) bin
	@rsync -ur ../$(DEPENDENCY)/$(BIN_DIR)/ $(BIN_DIR)/

clean :
	@echo Deleting directory: $(OBJ_DIR)
	@rm -rf $(OBJ_DIR)
	@echo Deleting directory: $(BIN_DIR)
	@rm -rf $(BIN_DIR)

-include $(DEPEND_FILES)
